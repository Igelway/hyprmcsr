# Bash Completion f체r hyprmcsr
_hyprmcsr_completions() {
  local cur prev opts config_root
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  opts="start destroy delete-old-worlds install modcheck run-jar version"

  # config_root dynamisch am Anfang bestimmen
  if [[ -n "$XDG_CONFIG_HOME" ]]; then
    config_root="$XDG_CONFIG_HOME/hyprmcsr"
  else
    config_root="$HOME/.config/hyprmcsr"
  fi

  if [[ ${cur} == -* ]] ; then
    COMPREPLY=( $(compgen -W "-h -p" -- ${cur}) )
    return 0
  fi

  if [[ ${COMP_CWORD} -eq 1 ]]; then
    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    return 0
  fi

  if [[ ${prev} == "-h" ]]; then
    local profiles
    profiles=$(ls "$config_root"/*.profile.json 2>/dev/null | xargs -n1 basename | sed 's/\.profile\.json$//')
    COMPREPLY=( $(compgen -W "${profiles}" -- ${cur}) )
    return 0
  fi

  if [[ ${prev} == "-p" ]]; then
    # Keine Vorschl채ge f체r -p
    return 0
  fi

  # Nach -h <profile> oder -p <irgendwas> wieder Kommandos vorschlagen, falls noch kein Befehl eingegeben wurde
  # (funktioniert auch, wenn mehrere Optionen gesetzt wurden)
  if [[ $COMP_CWORD -ge 2 ]]; then
    local seen_cmd=0
    for ((i=1; i<COMP_CWORD; i++)); do
      # Pr체fe, ob ein echtes Kommando schon eingegeben wurde
      for o in $opts; do
        if [[ "${COMP_WORDS[i]}" == "$o" ]]; then
          seen_cmd=1
        fi
      done
    done
    if [[ $seen_cmd -eq 0 ]]; then
      COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
      return 0
    fi
  fi

  if [[ ${prev} == "run-jar" ]]; then
    # Dynamisch config.json suchen
    local config_file download_root jars_dir
    config_file="$config_root/config.json"
    if [[ -f "$config_file" ]]; then
      download_root=$(jq -r '.download.root // empty' "$config_file" 2>/dev/null)
    fi
    if [[ -z "$download_root" || "$download_root" == "null" ]]; then
      # Fallback: relative zum Skript
      local script_path
      script_path=$(command -v hyprmcsr)
      jars_dir="$(dirname "$(dirname "$script_path")")/download/jar"
    else
      jars_dir="$download_root/jar"
    fi
    local jars
    jars=$(ls "$jars_dir"/*.jar 2>/dev/null | xargs -n1 basename)
    COMPREPLY=( $(compgen -W "${jars}" -- ${cur}) )
    return 0
  fi
}
complete -F _hyprmcsr_completions hyprmcsr
